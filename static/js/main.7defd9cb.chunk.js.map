{"version":3,"sources":["components/BasicForm.js","App.js","index.js"],"names":["getvalue","value","action","type","value1","value1_1","length","value2","value2_2","value3","value3_3","includes","button","proverka1","proverka2","proverka3","proverka1_1","proverka2_2","proverka3_3","BasicForm","useReducer","allvalue","setallvalue","event","target","useEffect","Blur","nameInputClasses","lastnameInputClasses","emailInputClasses","onSubmit","preventDefault","className","htmlFor","id","onChange","e","onBlur","disabled","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7defd9cb.chunk.js","sourcesContent":["import { useReducer, useEffect } from \"react\";\n\nlet getvalue=(value, action)=>{\n  switch(action.type){\n    case 'NAME': return {\n      ...value,\n      value1: action.value,\n      value1_1: action.value.length>3\n    }\n    case 'LASTNAME': return{\n      ...value,\n     value2: action.value,\n     value2_2: action.value.length>3\n    }\n    case 'EMAIL': return{\n      ...value,\n      value3: action.value,\n      value3_3: action.value.includes('@.')\n    }\n    case 'BTN': return{\n      ...value,\n      button: action.value\n    }\n    case 'BLUR': return{\n      ...value,\n     proverka1: action.value,\n     proverka2: action.value,\n     proverka3: action.value,\n    }\n    case 'BLUR1': return{\n      ...value,\n      proverka1: action.value,\n      proverka1_1: !value.value1_1 && action.value\n    }\n    case 'BLUR2': return{\n      ...value,\n      proverka2: action.value,\n      proverka2_2: !value.value2_2 && action.value\n    }\n    case 'BLUR3': return{\n      ...value,\n      proverka3: action.value,\n      proverka3_3: !value.value3_3 && action.value\n    }\n    default: return action.value\n  }\n}\nconst BasicForm = () => {\n  let[allvalue, setallvalue]=useReducer(getvalue, \n    {\n      value1: '',\n      value2: '',\n      value3: '',\n      value1_1: false,\n      value2_2: false,\n      value3_3: false,\n      button: false,\n      proverka1: false,\n      proverka2: false,\n      proverka3: false,\n      proverka1_1: false,\n      proverka2_2: false,\n      proverka3_3: false,\n    },\n    )\n   \n    function value(type, event){\n      setallvalue({type: type, value: event.target.value})\n    }\n    \n    useEffect(() => { \n        if(allvalue.value1_1 && allvalue.value2_2 && allvalue.value3_3) {\n        setallvalue({type: 'BTN', value: true})\n      } else {\n        setallvalue({type: 'BTN', value: false})\n      }\n    }, [allvalue.value1_1, allvalue.value2_2, allvalue.value3_3])\n\n    const Blur = (type) => {\n      setallvalue({type: `${type}`, value: true})\n    }\n\n    function submit(event){\n      event.preventDefault();\n      setallvalue({type: 'BLUR', value: true})\n      if(!allvalue.value1_1 && !allvalue.value2_2 && !allvalue.value3_3) {\n        return\n      }\n      setallvalue({type: 'BLUR', value: false})\n    }\n\n  const nameInputClasses =  allvalue.proverka1_1 ? 'form-control invalid' : 'form-control'\n  const lastnameInputClasses =  allvalue.proverka2_2 ? 'form-control invalid' : 'form-control'\n  const emailInputClasses =  allvalue.proverka3_3 ? 'form-control invalid' : 'form-control'\n\n  return (\n    <form onSubmit={submit}>\n      <div className='control-group' >\n        <div className={nameInputClasses}>\n          <label htmlFor='name'>First Name</label>\n          <input type='text' id='name' onChange={(e)=>value('NAME',e)} value={allvalue.value1} onBlur={()=>Blur('BLUR1')}/>\n          {allvalue.proverka1_1 && <p>Name must not be empty</p>}\n        </div>\n        <div className={lastnameInputClasses}>\n          <label htmlFor='name'>Last Name</label>\n          <input type='text' id='name' onChange={(e)=>value('LASTNAME',e)} value={allvalue.value2} onBlur={()=>Blur('BLUR2')}/>\n          {allvalue.proverka2_2 && <p>Lastname must not be empty</p>}\n        </div>\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor='name'>E-Mail Address</label>\n        <input type='text' id='name' onChange={(e)=>value('EMAIL',e)} value={allvalue.value3} onBlur={()=>Blur('BLUR3')}/>\n        {allvalue.proverka3_3 && <p>Email must not be empty</p>}\n      </div>\n      <div className='form-actions'>\n        <button type=\"submit\" disabled={!allvalue.button}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n","import BasicForm from './components/BasicForm';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <BasicForm/>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}